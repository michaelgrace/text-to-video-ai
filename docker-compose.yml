name: text-to-video-ai

# Enable BuildKit for faster builds - Simplified
x-environment:
  &build-env
  DOCKER_BUILDKIT: 1  # This is the only one needed for BuildKit

services:
  text-to-video:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
        CACHEBUST: ${CACHEBUST:-1}
      # Remove problematic cache configuration
      # cache_from:
      #   - text-to-video:latest
      pull: true
      target: dev
    image: text-to-video:latest 
    volumes:
      - ./exports:/app/exports                 # Contains logs directory
      - ./temp:/app/temp
      # - ./.logs:/app/.logs                  # Comment out or remove this line
      - ./utility:/app/utility     # Keep original working code
      - ./app:/app/app            # Add new structure
      - ./app.py:/app/app.py
      - ./streamlit_app.py:/app/streamlit_app.py
      - pip-cache:/root/.cache/pip
      - pgdata:/var/lib/postgresql/data
      - ./audio_tts.wav:/app/audio_tts.wav
      - ./rendered_video.mp4:/app/rendered_video.mp4
    devices:
      - /dev/dri:/dev/dri  # Add Intel GPU device access
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME}
        
      # - SUBTITLE_MAX_CHARS=${SUBTITLE_MAX_CHARS}
      # - MAX_BG_VIDEOS=${MAX_BG_VIDEOS}
      # - PHOTO_OUTPUT_DIR=${PHOTO_OUTPUT_DIR}

      - PEXELS_API_KEY=${PEXELS_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      # - TOGETHER_API_KEY=${TOGETHER_API_KEY}  # Commented as not currently used
      
      # Voice Services
      - VOICE_PROVIDER=${VOICE_PROVIDER}
      - KOKORO_SERVICE_URL=${KOKORO_SERVICE_URL}
      - ELEVENLABS_SERVICE_URL=${ELEVENLABS_SERVICE_URL}
      #- ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}      
      - TIKTOK_SERVICE_URL=${TIKTOK_SERVICE_URL}
      #- TOGETHER_API_KEY=${TOGETHER_API_KEY}    
      - LIBVA_DRIVER_NAME=i965  # Intel GPU driver
      - LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri
      - MESA_D3D12_DEFAULT_ADAPTER_NAME=Intel(R) UHD Graphics  # Force WSL to use Intel GPUdefault display
      - DISPLAY=${DISPLAY}
      - FFMPEG_HWACCEL=vaapi    # Enable VAAPI hardware acceleration
      # CPU optimization
      - OMP_NUM_THREADS=8
      - MKL_NUM_THREADS=8
      - NUMEXPR_NUM_THREADS=8
      - PYTORCH_ENABLE_CPU_FALLBACK=1
      # FFmpeg optimization
      - FFREPORT=file=/app/tmp/ffmpeg_report.log:level=32
      - AV_LOG_FORCE_COLOR=1
      - FFMPEG_THREADS=8
      # GPU configuration - both options available
      - LIBVA_DRIVER_NAME=${GPU_DRIVER:-i965}  # Fallback to i965 if not set
      - FFMPEG_HWACCEL=vaapi
      - FFMPEG_VAAPI_DEVICE=/dev/dri/renderD128
      # Postgres environment variables
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    runtime: "runc"
    ports:
      - "7701:7701"
    networks:
      - ttv-network
      - crown-network
    command: streamlit run streamlit_app.py --server.port=7701 --server.address=0.0.0.0
    # Keep original command (commented but preserved)
    # command: streamlit run web/streamlit_app.py --server.port=7701 --server.address=0.0.0.0

networks:
  ttv-network:
    driver: bridge
  crown-network:
    external: true

volumes:
  pip-cache:
    name: pip-cache
  pgdata:
