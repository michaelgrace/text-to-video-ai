name: text-to-video-ai

# Enable BuildKit for faster builds
x-environment:
  &build-env
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

services:
  text-to-video:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
        # Add this to invalidate cache when Python files change
        CACHEBUST: ${CACHEBUST:-1}
    image: text-to-video:latest
    volumes:
      - ./output:/app/output
      - ./temp:/app/temp
      - ./.logs:/app/.logs
      - ./utility:/app/utility
      - ./app.py:/app/app.py  # DO NOT REMOVE: :ro was added to utility, app.py and streamlit_app.py
      - ./streamlit_app.py:/app/streamlit_app.py
    environment:
      - DEBUG_MODE=${DEBUG_MODE:-false}  # Enable debug in dev
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME}
        
      - SUBTITLE_MAX_CHARS=${SUBTITLE_MAX_CHARS}
      - MAX_BG_VIDEOS=${MAX_BG_VIDEOS}
      - PHOTO_OUTPUT_DIR=${PHOTO_OUTPUT_DIR}

      - PEXELS_API_KEY=${PEXELS_API_KEY}
      - PEXELS_PHOTO_API_URL=${PEXELS_PHOTO_API_URL}
      - PEXELS_PHOTO_API_URL_CURATED=${PEXELS_PHOTO_API_URL_CURATED}
      - PEXELS_VIDEO_API_URL=${PEXELS_VIDEO_API_URL}
      - PEXELS_VIDEO_API_URL_CURATED=${PEXELS_VIDEO_API_URL_CURATED}
      
      - VOICE_PROVIDER=${VOICE_PROVIDER}
      - KOKORO_SERVICE_URL=${KOKORO_SERVICE_URL}
      - ELEVENLABS_SERVICE_URL=${ELEVENLABS_SERVICE_URL}
      #- ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      
      - TIKTOK_SERVICE_URL=${TIKTOK_SERVICE_URL}
      #- TOGETHER_API_KEY=${TOGETHER_API_KEY}    
      # CPU optimization 
      - OMP_NUM_THREADS=8
      - MKL_NUM_THREADS=8
      - NUMEXPR_NUM_THREADS=8
      - PYTORCH_ENABLE_CPU_FALLBACK=1
      # FFmpeg optimization 
      - FFREPORT=file=/app/tmp/ffmpeg_report.log:level=32
      - AV_LOG_FORCE_COLOR=1
      - FFMPEG_THREADS=8
      # Intel GPU support
      - LIBVA_DRIVER_NAME=iHD
      # Hardware acceleration flags for FFmpeg
      - FFMPEG_HWACCEL=vaapi
      - FFMPEG_VAAPI_DEVICE=/dev/dri/renderD128
    devices:
      - /dev/dri:/dev/dri  # Give access to Intel GPU
    deploy:
      resources:
        limits:
          memory: 8G
    runtime: runc
    ports:
      - "7701:7701"
    networks:
      - ttv-network
      - crown-network
    command: streamlit run streamlit_app.py --server.port=7701 --server.address=0.0.0.0

networks:
  ttv-network:
    driver: bridge
  crown-network:
    external: true
